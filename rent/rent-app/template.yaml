AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python-ecom-app

  Sample SAM Template for python-ecom-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: nodejs16.x
    CodeUri: src/
    Tracing: Active
    Environment:
      Variables:
        POWERTOOLS_SERVICE_NAME: rent-app
        LOG_LEVEL: INFO
        POWERTOOLS_METRICS_NAMESPACE: rent-app-metric

  Api:
    TracingEnabled: True

Parameters:
  Env:
    Type: String
    Description: Environnement name
    Default: dev
  TechStack:
    Type: String
    Description: Framework used or resource used.
    Default: graphql
  UserPoolId:
    Type: String
    Description: User pool Id
  UserPoolIdRegion:
    Type: String
    Description: User pool id region


Resources:

  AppSyncServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "appsync.amazonaws.com"
            Action:
              - "sts:AssumeRole"


  RentApi:
    Type: "AWS::AppSync::GraphQLApi"
    Properties:
      Name: RentApi
      AuthenticationType: "API_KEY"
      AdditionalAuthenticationProviders:
        - AuthenticationType: "AMAZON_COGNITO_USER_POOLS"
          UserPoolConfig:
            UserPoolId: !Ref UserPoolId
            AwsRegion: !Ref UserPoolIdRegion
      XrayEnabled: true

  RentApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt RentApi.ApiId

  RentApiSchema:
    Type: "AWS::AppSync::GraphQLSchema"
    Properties:
      ApiId: !GetAtt RentApi.ApiId
      DefinitionS3Location: ./schema.graphql
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - W3002  # allow relative path in DefinitionS3Location

  RentTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub Rent-${TechStack}-${Env}
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_IMAGE  
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
           

  RentDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      ApiId: !GetAtt RentApi.ApiId
      Name: "RentDatascource"
      Type: "AMAZON_DYNAMODB"
      ServiceRoleArn: !GetAtt AppSyncServiceRole.Arn
      DynamoDBConfig:
        AwsRegion: !Ref "AWS::Region" 
        TableName: !Ref RentTable

  CreateRentFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties: 
      ApiId: !GetAtt RentApi.ApiId
      CodeS3Location: "./src/handlers/put-item.mjs"
      DataSourceName: !GetAtt RentDataSource.Name
      Description: "Creata a Rent"
      FunctionVersion: "2018-05-29"
      Name: "createRent"
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
  
  UpdateRentFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties: 
      ApiId: !GetAtt RentApi.ApiId
      CodeS3Location: "./src/handlers/update-item.mjs"
      DataSourceName: !GetAtt RentDataSource.Name
      Description: "Update a Rent"
      FunctionVersion: "2018-05-29"
      Name: "updateRent"
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0

  GetRentFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties: 
      ApiId: !GetAtt RentApi.ApiId
      CodeS3Location: "./src/handlers/get-by-id.mjs"
      DataSourceName: !GetAtt RentDataSource.Name
      Description: "Get by id a Rent"
      FunctionVersion: "2018-05-29"
      Name: "getRent"
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0

  ListRentFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties: 
      ApiId: !GetAtt RentApi.ApiId
      CodeS3Location: "./src/handlers/get-all-items.mjs"
      DataSourceName: !GetAtt RentDataSource.Name
      Description: "Get all Rents"
      FunctionVersion: "2018-05-29"
      Name: "listRent"
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0

  DeleteRentFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties: 
      ApiId: !GetAtt RentApi.ApiId
      CodeS3Location: "./src/handlers/delete-item.mjs"
      DataSourceName: !GetAtt RentDataSource.Name
      Description: "Delete Rent"
      FunctionVersion: "2018-05-29"
      Name: "deleteRent"
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0

  CreateRentResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: !GetAtt RentApi.ApiId
      TypeName: "Mutation"
      FieldName: "createRent"
      Kind: PIPELINE
      PipelineConfig:
        Functions: 
        - !GetAtt CreateRentFunction.FunctionId
      RequestMappingTemplate: "{}"
      ResponseMappingTemplate: "$util.toJson($context.result)"

  UpdateRentResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: !GetAtt RentApi.ApiId
      TypeName: "Mutation"
      FieldName: "updateRent"
      Kind: PIPELINE
      PipelineConfig:
        Functions: 
        - !GetAtt UpdateRentFunction.FunctionId
      RequestMappingTemplate: "{}"
      ResponseMappingTemplate: "$util.toJson($context.result)"

  GetRentResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: !GetAtt RentApi.ApiId
      TypeName: "Query"
      FieldName: "getRent"
      Kind: PIPELINE
      PipelineConfig:
        Functions: 
        - !GetAtt GetRentFunction.FunctionId
      RequestMappingTemplate: "{}"
      ResponseMappingTemplate: "$util.toJson($context.result)"

  ListRentResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: !GetAtt RentApi.ApiId
      TypeName: "Query"
      FieldName: "getAllRents"
      Kind: PIPELINE
      PipelineConfig:
        Functions: 
        - !GetAtt ListRentFunction.FunctionId
      RequestMappingTemplate: "{}"
      ResponseMappingTemplate: "$util.toJson($context.result)"

  DeleteRentResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: !GetAtt RentApi.ApiId
      TypeName: "Mutation"
      FieldName: "deleteRent"
      Kind: PIPELINE
      PipelineConfig:
        Functions: 
        - !GetAtt DeleteRentFunction.FunctionId
      RequestMappingTemplate: "{}"
      ResponseMappingTemplate: "$util.toJson($context.result)"

  DynamoDBPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "DirectAppSyncLambda"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "dynamodb:*"
            Resource:
              - !GetAtt RentTable.Arn
      Roles:
        - !Ref AppSyncServiceRole

# Outputs:
#   # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   # Find out more about other implicit resources you can reference within SAM
#   # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api

